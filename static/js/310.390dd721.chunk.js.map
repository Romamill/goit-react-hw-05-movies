{"version":3,"file":"static/js/310.390dd721.chunk.js","mappings":"6MAGe,SAASA,EAAT,GAAmC,IAAdC,EAAa,EAAbA,MAAOC,EAAM,EAANA,GACzC,GAAuBC,EAAAA,EAAAA,MAAhBC,GAAP,eAEA,OACE,yBACE,SAAC,KAAD,CACEC,GAAE,0CAAqCH,GACvCI,MAAO,CACLC,UAAUC,EAAAA,EAAAA,MAAcC,SACxBC,OAAQN,EAAaO,IAAI,UAJ7B,SAOGV,KAIR,CChBc,SAASW,EAAT,GAA6B,IAAXC,EAAU,EAAVA,OAC/B,OACE,+BACE,wBACGA,EAAOC,KAAI,gBAAGZ,EAAH,EAAGA,GAAID,EAAP,EAAOA,MAAP,OACV,SAACD,EAAD,CAAoBC,MAAOA,EAAOC,GAAIA,GAAtBA,EADN,OAMnB,C,8HCXYa,E,OAAaC,EAAAA,KAAH,0C,SCKR,SAASC,IACpB,OAA0BC,EAAAA,EAAAA,UAAS,IAAnC,eAAOC,EAAP,KAAcC,EAAd,KACA,GAAwCF,EAAAA,EAAAA,UAAS,IAAjD,eAAOG,EAAP,KAAqBC,EAArB,KACA,GAAwCnB,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBmB,EAArB,KACMb,EAASN,EAAaO,IAAI,SAMhC,SAASa,EAAcd,GACnB,KACqBe,EAAAA,EAAAA,IAAaf,GACrBgB,MAAK,SAAAC,GACVL,EAAgBK,EAAKC,QACxB,GACY,CAAf,MAAOC,GAAQ,CACpB,EAXDC,EAAAA,EAAAA,YAAU,WACNpB,GAAUc,EAAcd,EAC3B,GAAE,CAACA,IAoBJ,OACI,6BACI,UAACK,EAAD,CACIgB,SAZS,SAAAC,GACjBA,EAAEC,iBACFV,EAAgB,CAACJ,MAAMA,GAC1B,EAQO,WAEI,kBAAOe,KAAK,OAAOC,SARV,SAAAH,GACjBZ,EAASY,EAAEI,OAAOC,MACrB,EAMsDA,MAAOlB,KAClD,mBAAQmB,QAAS,kBAAKd,EAAcL,EAAnB,EAAjB,uBAEqB,IAAxBE,EAAakB,SAAgB,SAAC3B,EAAA,EAAD,CAAQC,OAAQQ,MAIzD,C","sources":["components/MovieItem/MovieItem.jsx","components/Movies/Movies.jsx","pages/Movies/Movies.styled.js","pages/Movies/Movies.jsx"],"sourcesContent":["import { Link, useLocation, useSearchParams } from 'react-router-dom';\nimport PropTypes from 'prop-types';\n\nexport default function MovieItem({ title, id }) {\n  const [searchParams] = useSearchParams();\n\n  return (\n    <li>\n      <Link\n        to={`/goit-react-hw-05-movies/movies/${id}`}\n        state={{\n          location: useLocation().pathname,\n          search: searchParams.get('query'),\n        }}\n      >\n        {title}\n      </Link>\n    </li>\n  );\n}\n\nMovieItem.propTypes = {\n  title: PropTypes.string.isRequired,\n  id: PropTypes.number.isRequired,\n};\n","import MovieItem from '../MovieItem/MovieItem';\nimport PropTypes from 'prop-types';\n\nexport default function Movies({ movies }) {\n  return (\n    <>\n      <ul>\n        {movies.map(({ id, title }) => (\n          <MovieItem key={id} title={title} id={id} />\n        ))}\n      </ul>\n    </>\n  );\n}\n\nMovies.propTypes = {\n  movies: PropTypes.array.isRequired,\n};\n","import styled from \"@emotion/styled\";\n\nexport const FormMovies = styled.form`\npadding: 10px 0;\n`","import { searchMovies } from \"api\";\nimport Movies from \"components/Movies/Movies\";\nimport { useEffect, useState } from \"react\";\nimport { useSearchParams } from \"react-router-dom\";\nimport { FormMovies } from \"./Movies.styled\";\n\n\nexport default function MoviesSearchPages() {\n    const [query, setQuery] = useState('');\n    const [moviesSearch, setMoviesSearch] = useState([]);\n    const [searchParams, setSearchParams] = useSearchParams();\n    const search = searchParams.get('query')\n\n    useEffect(() => {\n        search && onClickSearch(search);\n    }, [search]);\n\n    function onClickSearch(search) {\n        try {\n            const response = searchMovies(search)\n            response.then(data => {\n                setMoviesSearch(data.results)\n            });\n        } catch (error){}\n    }\n\n    const handleSubmit = e => {\n        e.preventDefault();\n        setSearchParams({query:query})\n    }\n\n    const handleChange = e => {\n        setQuery(e.target.value)\n    }\n\n    return (\n        <main>\n            <FormMovies\n                onSubmit={handleSubmit}>\n                <input type=\"text\" onChange={handleChange} value={query} />\n                <button onClick={()=> onClickSearch(query)}>Search</button>\n            </FormMovies>\n            {moviesSearch.length !== 0 && <Movies movies={moviesSearch} />}\n    </main>\n)\n\n} "],"names":["MovieItem","title","id","useSearchParams","searchParams","to","state","location","useLocation","pathname","search","get","Movies","movies","map","FormMovies","styled","MoviesSearchPages","useState","query","setQuery","moviesSearch","setMoviesSearch","setSearchParams","onClickSearch","searchMovies","then","data","results","error","useEffect","onSubmit","e","preventDefault","type","onChange","target","value","onClick","length"],"sourceRoot":""}