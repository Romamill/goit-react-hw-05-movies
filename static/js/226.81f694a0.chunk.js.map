{"version":3,"file":"static/js/226.81f694a0.chunk.js","mappings":"8OAEaA,EAAoBC,EAAAA,EAAAA,GAAH,+E,SCEf,SAASC,IACtB,IAAQC,GAAYC,EAAAA,EAAAA,MAAZD,QAGR,OACE,iCACE,SAACH,EAAD,UAJe,CAAC,OAAQ,WAKVK,KAAI,SAACC,EAAMC,GACrB,OACE,yBACE,SAAC,KAAD,CACEC,GAAE,0CAAqCL,EAArC,YAAgDG,EAAKG,eADzD,SAGGH,KAJIC,EAQZ,OAEH,SAAC,KAAD,MAGL,C,qBCvBYG,GAAoBT,EAAAA,EAAAA,GAAOU,EAAAA,GAAPV,CAAH,+HAQjBW,EAAmBX,EAAAA,EAAAA,IAAH,uCAIhBY,EAAuBZ,EAAAA,EAAAA,IAAH,6FAMpBa,EAAuBb,EAAAA,EAAAA,IAAH,4CCVlB,SAASc,IACtB,OAAwCC,EAAAA,EAAAA,UAAS,MAAjD,eAAOC,EAAP,KAAqBC,EAArB,KACQf,GAAYC,EAAAA,EAAAA,MAAZD,QAIFgB,GAAcC,EAAAA,EAAAA,SAAOC,EAAAA,EAAAA,MAAcC,OA2BzC,IAzBAC,EAAAA,EAAAA,YAAU,WACR,KACmBC,EAAAA,EAAAA,IAAgBrB,GACxBsB,MAAK,SAAAC,GACZ,IACEC,EAMED,EANFC,MACAC,EAKEF,EALFE,SACAC,EAIEH,EAJFG,YACAC,EAGEJ,EAHFI,aACAC,EAEEL,EAFFK,OACAC,EACEN,EADFM,aAGFd,EAAgB,CACdS,MAAAA,EACAC,SAAAA,EACAC,YAAAA,EACAC,aAAAA,EACAC,OAAAA,EACAC,aAAAA,GAEH,GACe,CAAhB,MAAOC,GAAS,CACnB,GAAE,CAAC9B,IAEAc,EAAc,CAChB,IAAQU,EACNV,EADMU,MAAOC,EACbX,EADaW,SAAUC,EACvBZ,EADuBY,YAAaC,EACpCb,EADoCa,aAAcC,EAClDd,EADkDc,OAAQC,EAC1Df,EAD0De,aAG5D,OACE,gCACGb,EAAYe,UACX,SAACxB,EAAD,CACEF,GACEW,EAAYe,QAAQC,UACnBhB,EAAYe,QAAQE,OAApB,iBACajB,EAAYe,QAAQE,QAC9B,IAENd,MAAOH,EAAYe,QAAQE,OAP7B,6BAYF,UAACvB,EAAD,YACE,SAACD,EAAD,CACEyB,IACEpB,EAAaY,YAAb,yCACsCA,GApDhD,8EAuDQS,IAAKX,KAEP,UAACb,EAAD,YACE,kCAAQa,EAAR,aAAkBK,EAAaO,MAAM,EAAG,GAAxC,QACA,8CAAmC,GAAfT,GAAmBU,QAAQ,GAA/C,QACA,sCACA,uBAAIZ,KACJ,oCACA,uBAAIG,EAAO1B,KAAI,gBAAGoC,EAAH,EAAGA,KAAH,gBAAiBA,EAAjB,iBAGnB,mDACA,SAACvC,EAAD,MAGL,CAED,OAAO,IACR,C","sources":["components/MovieDetails/MovieDetails.styled.js","components/MovieDetails/MovieDetails.jsx","pages/MoviesDetails/MoviesDetails.styled.js","pages/MoviesDetails/MoviesDetails.jsx"],"sourcesContent":["import styled from \"@emotion/styled\";\n\nexport const ListMoviesDetails = styled.ul`\npadding-bottom: 15px;\nborder-bottom: 1px solid grey;\n`","import { Link, Outlet, useParams } from 'react-router-dom';\nimport { ListMoviesDetails } from './MovieDetails.styled';\n\n\nexport default function MovieDetails() {\n  const { movieId } = useParams();\n  const NAVIGATION = ['Cast', 'Reviews'];\n\n  return (\n    <>\n      <ListMoviesDetails>\n        {NAVIGATION.map((page, index) => {\n          return (\n            <li key={index}>\n              <Link\n                to={`/goit-react-hw-05-movies/movies/${movieId}/${page.toLowerCase()}`}\n              >\n                {page}\n              </Link>\n            </li>\n          );\n        })}\n      </ListMoviesDetails>\n      <Outlet />\n    </>\n  );\n}\n","import styled from \"@emotion/styled\";\nimport { NavLink } from \"react-router-dom\";\n\nexport const LinkMoviesDetails = styled(NavLink)`\n  padding: 0 5px;\n  text-decoration: none;\n  font-size: 12px;\n  font-weight: 700;\n  color: black;\n`;\n\nexport const ImgMoviesDetails = styled.img`\nwidth: 200px;\n`\n\nexport const DivInfoMoviesDetails = styled.div`\n  display: flex;\n  padding: 5px;\n  border-bottom: 1px solid gray;\n`;\n \nexport const DivTextMoviesDetails = styled.div`\n  padding: 0 15px;\n`;","import { getMovieDetails } from '../../api/index';\nimport MovieDetails from 'components/MovieDetails/MovieDetails';\nimport { useEffect, useRef, useState } from 'react';\nimport { useLocation, useParams } from 'react-router-dom';\nimport {\n  DivInfoMoviesDetails,\n  DivTextMoviesDetails,\n  ImgMoviesDetails,\n  LinkMoviesDetails,\n} from './MoviesDetails.styled';\n\nexport default function MoviesDetails() {\n  const [movieDetails, setMovieDetails] = useState(null);\n  const { movieId } = useParams();\n  const defaultImg =\n    'https://ireland.apollo.olxcdn.com/v1/files/0iq0gb9ppip8-UA/image;s=1000x700';\n\n  const locationRef = useRef(useLocation().state);\n\n  useEffect(() => {\n    try {\n      const response = getMovieDetails(movieId);\n      response.then(data => {\n        const {\n          title,\n          overview,\n          poster_path,\n          vote_average,\n          genres,\n          release_date,\n        } = data;\n\n        setMovieDetails({\n          title,\n          overview,\n          poster_path,\n          vote_average,\n          genres,\n          release_date,\n        });\n      });\n    } catch (error) {}\n  }, [movieId]);\n\n  if (movieDetails) {\n    const { title, overview, poster_path, vote_average, genres, release_date } =\n      movieDetails;\n\n    return (\n      <>\n        {locationRef.current && (\n          <LinkMoviesDetails\n            to={\n              locationRef.current.location +\n              (locationRef.current.search\n                ? `?query=${locationRef.current.search}`\n                : '')\n            }\n            state={locationRef.current.search}\n          >\n            &#8592; Go back\n          </LinkMoviesDetails>\n        )}\n        <DivInfoMoviesDetails>\n          <ImgMoviesDetails\n            src={\n              movieDetails.poster_path\n                ? `https://image.tmdb.org/t/p/w500${poster_path}`\n                : defaultImg\n            }\n            alt={title}\n          />\n          <DivTextMoviesDetails>\n            <h2>{`${title} (${release_date.slice(0, 4)})`}</h2>\n            <p>{`User score: ${(vote_average * 10).toFixed(2)}%`}</p>\n            <h3>Overview</h3>\n            <p>{overview}</p>\n            <h3>Genres</h3>\n            <p>{genres.map(({ name }) => `${name} `)}</p>\n          </DivTextMoviesDetails>\n        </DivInfoMoviesDetails>\n        <p>Additional information</p>\n        <MovieDetails />\n      </>\n    );\n  }\n\n  return null;\n}\n"],"names":["ListMoviesDetails","styled","MovieDetails","movieId","useParams","map","page","index","to","toLowerCase","LinkMoviesDetails","NavLink","ImgMoviesDetails","DivInfoMoviesDetails","DivTextMoviesDetails","MoviesDetails","useState","movieDetails","setMovieDetails","locationRef","useRef","useLocation","state","useEffect","getMovieDetails","then","data","title","overview","poster_path","vote_average","genres","release_date","error","current","location","search","src","alt","slice","toFixed","name"],"sourceRoot":""}